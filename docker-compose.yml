version: "3"

services:
  clickhouse:
    image: clickhouse/clickhouse-server
    volumes:
      - ./clickhouse/data/:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9004:9004"
    expose:
      - 9009
# -------------FLINK------------------
  jobmanager:
    image: apache/flink:1.13.1-scala_2.12-java8
    command: "jobmanager.sh start-foreground"
    ports:
      - 8081:8081
    volumes:
      - ./flink/jobmanager/conf:/opt/flink/conf
      - ./flink/jobmanager/flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - ./flink/jobmanager/flink-savepoints-directory:/tmp/flink-savepoints-directory
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      
  taskmanager:
    image: apache/flink:1.13.1-scala_2.12-java8
    depends_on:
      - jobmanager
    command: "taskmanager.sh start-foreground"
    volumes:
      - ./flink/taskmanager/conf:/opt/flink/conf
      - ./flink/taskmanager/flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - ./flink/taskmanager/flink-savepoints-directory:/tmp/flink-savepoints-directory
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  
# -------------KAFKA------------------
  # kafka:
  #   image: wurstmeister/kafka:2.12-2.2.1
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_CREATE_TOPICS: "input:2:1, output:2:1"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   ports:
  #     - 9092:9092
  #     - 9094:9094

  # zookeeper:
  #   image: wurstmeister/zookeeper:3.4.6

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.24.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - broker
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: broker:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.24.0
    container_name: ksqldb-cli
    depends_on:
      - broker
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true